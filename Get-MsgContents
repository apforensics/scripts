# Use Powershell ISE and change into root directory containing EML files. Run script in ISE and type Get-MsgContents in console. 
# This script still needs a lot of work. Output will lbe thrown into console. 

function Get-MsgContents{

    Get-ChildItem . -Recurse -Filter *.eml | ForEach-Object{
    
    $adoDbStream = New-Object -ComObject ADODB.Stream
    
    $adoDbStream.Open()
    
    $adoDbStream.LoadFromFile($_.FullName)
    
    $cdoMessage = New-Object -ComObject CDO.Message
    
    $cdoMessage.DataSource.OpenObject($adoDbStream, "_Stream")
    
   
    $messageArray = @($cdoMessage.Fields.Item("urn:schemas:mailheader:date").Value, $cdoMessage.Fields.Item("urn:schemas:mailheader:to").Value, $cdoMessage.Fields.Item("urn:schemas:mailheader:from").Value, $cdoMessage.Fields.Item("urn:schemas:mailheader:bcc").Value, $cdoMessage.Fields.Item("urn:schemas:mailheader:cc").Value,$cdoMessage.Fields.Item("urn:schemas:mailheader:subject").Value, $cdoMessage.Fields.Item("urn:schemas:mailheader:sent").Value, $cdoMessage.Fields.Item("urn:schemas:mailheader:message-id").Value)
    
    #Write out the owning fileName
    $fullname = "`n-------- $($_.FullName) -------------"
    $messageArray
    $htmlbody = $cdoMessage.HTMLBody

    #write out the body of the e-mail
    echo $htmlbody

        #do your regex match here
    #if(<regex match condition>)
    #   {
    #    echo $fullname
    #   } 

    
    }
    }
